Overlord Engine ToDo list:

Last updated 14.05.2004
==================================================================================
	Alpha version features:
-Combat.
-Actions implementation
-combat-related Orders
-Guarding/Patrolling/Stances
  -- Start/Stop Guarding
	-- Attacks due to stances
	-- Restrict actions on guarded territory
-faction statistics
-Location developement
-Weather and season effects
-CP
 -- calculation
 -- CP limitation

   Post-Alpha features:

- Alias names for units
- Checker.
=================================================================================
Things to do:

- add item types: (living, mineral etc) - variety?
- title cancellation
- eating raw products like grain or cattle for upkeep is not implemented
- unit that borrows money or food for upkeep to other units doesn't keeps 
		money or food for it's own upkeep
- Conditional order reporting ('!'  '?')
- Define static type of reporter (ERROR, NORMAL...) for use in conditional order reporting.

Things to check:

- check all orders that have unit parameters for using 	DOWNCAST_ENTITY<UnitEntity>(parameters[0]);
- forget removes skill bonuses
Features to change/improve:

- when disbanding unit allow restacking of followers (like in eject order)
- Smart Drowning
- item bonuses to level limit : applyEquipementEffects()
- skill bonuses to level limit
- controlled monsters of oathing units should oath too.
- faster movement (i.e. mode remains the same but movement is faster)
- let SEE order accept [faction] parameter
- let GET order interpret missing unit/location parameter as current location.
- Conditions (Skill) may be demanded to enter location/Building
- add/remove Unit/Entity to locations
- create SkillEquipCondition and SkillTitleCondition <- not urgent as no leader supposed to use forget
- Make keyword and parent in GameData static and reconsider to replace second constructor with clone method

Solutions  to change/improve:

- worseThan functions instead of <= ect for stances
- Provide order-id whenever possible, use it to filter !-like report modificators
  for that provide static field defining report type (sucess, fail, invalid) in Reporter and ability in ReportPattern to read it

- consider writing special collection (template?) supporting load/save/report/add/remove/has pattern
  it requires unified interface to all GameData and Element objects.

- Incorporate possibility of placeholders into tokens so that it becomes invisible from outside
  (make all placeholders/alias completely internal)





hierachy of reporting: routines that will be used for reporting both in Units and Constructions

- elements may be as parameters (they may be saved, parsed) ???
 But use of elements in reports should be avoided because they may report not their current state
  but the state at the time of report printing.
==========================================================================================
Known Bugs/features:

4. orders given to new units. Placeholders
   should have place for orders and when they
	 are transformed into unit they should copy that orders.

7. STANCE FRIEND as order to set default stance is not supported
 ( it is also not requered and not documented)
 Problem is in distinguishing correct and incorrect varieties values
8. OATH transfers unit to a new faction but old faction doesn't
 receive report of unit actions duiring turn.
9.	As reports generated at the end of turn, changing entity name have backward effect.
10.	Unit enters location in post-turn phase. so AT commands works only on the next day.
22.
23.


Orders implementation status:
																	( * - means known bugs)

* EMAIL    ---- implemented ---- tested
* NAME     ---- implemented ---- tested
* PASSWORD ---- implemented ---- tested
* RESIGN   ---- implemented ---- tested
* SETTING  ---- implemented ---- tested
* RESHOW   ---- implemented ---- tested

* ACCEPT   ---- implemented ---- tested
* AT       ---- implemented ---- tested
* ATTACK --pars--
* BESTOW   ---- implemented ---- tested
* BUY      ---- implemented ---- tested
* CANCEL   ---- implemented ---- *
* CARAVAN  ---- implemented ---- tested
* CHRISTEN ---- implemented ---- tested
* CLAIM    ---- implemented ---- tested
* COMBAT
* DAY      ---- implemented ---- tested
* DESCRIBE ---- implemented ---- tested
* DISBAND  ---- implemented ---- tested
* DROP     ---- implemented ---- tested
* EJECT    ---- implemented ---- tested
* ENTER    ---- implemented ---- tested
* EQUIP    ---- implemented ---- tested
* FORGET   ---- implemented ---- tested
* GET      ---- implemented ---- tested
* GIVE     ---- implemented ---- tested
* GUARD	--pars--
* HAVE     ---- implemented ---- tested
* LEADER   ---- implemented ---- tested
* LEADING  ---- implemented ---- tested
* LEAVE    ---- implemented ---- tested
* MARCH	 --pars--
* MERGE    ---- implemented ---- tested
* MOVE     ---- implemented ---- tested
* NAME     ---- implemented ---- tested *
* OATH     ---- implemented ---- tested *
* PATROL  --pars--
* PILLAGE --pars--
* PROMOTE  ---- implemented ---- tested
* RECRUIT  ---- implemented ---- tested
* RETREAT  ---- implemented ---- tested
* SEE      ---- implemented ---- tested
* SELL     ---- implemented ---- tested
* SETTING  ---- implemented ---- tested
* SIZE     ---- implemented ---- tested
* SKILL    ---- implemented ---- tested
* SPLIT    ---- implemented ---- tested
* STACK    ---- implemented ---- tested
* STANCE   ---- implemented ---- tested *
* STAY     ---- implemented ---- tested
* STUDY    ---- implemented ---- tested
* SYNCHRO  ---- implemented ---- tested
* SWAP     ---- implemented ---- tested
* TACTIC  --pars--
* TARGET   ---- implemented ---- tested
* TEACH    ---- implemented ---- tested
* UNSTACK  ---- implemented ---- tested
* USE      ---- implemented ---- tested
* WAIT     ---- implemented ---- tested
* WITHDRAW ---- implemented ---- tested
* WORK     ---- implemented ---- tested
* YIELD	   ---- implemented ---- tested

Actions:

1  FarVisionAction observe far location
2  BorrowRandomKnowledgeAction <- read minds
3  TeleportAction <- wway
4  IncreaseResourceAction  <-- add resource to location
5  ChangeRaceAction
6  CreateRandomMountAction    <- random object of specific equipment type
7  LocateMineralAction
9  RaiseDeadAction
10 ChangeWeatherAction
12 CloneMountAction
13 SummonRandomBeastAction
14 LiftCoinsAction
16 WaterVisionAction observe far location (water only)
18 IncreaseLivingResourcesAction
19 SacrificeAction
20 MagicTeachingAction (mmnd)
21 CreateConstructionAction
22 ChangeClimateAction
23 CallSeaAction <- transfer resources from sea to the current location
24 CallBeastsAction <- one each of horse or cattles will be substracted from all adjacent areas, and added to the local area.
25 OpenChasmAction
26 AssasinateAction
27 MossPolutionAction
28 CaptureAction
29 DevastationAction
30 OpenPortalAction
31 LureUnitAction <-- attract unit from neighbouring location
32 OpenMagicWayAction <- create exit
SwapMindsAction <- Local only





FX_SPEEDUP_STRUCTURE <- faster building at location (effect)
FX_SPEEDUP_HARVEST<- faster harvesting at location (effect)
17 FX_ALTERED_UNIT mana maskarade (effect)
fx_launch_armageddon <--- Unsupported
FX_MIND_SWAPPING  <--- Unsupported
FX_SINGLE_SUMMONING <--- Summoning
8  FX_SUMMONING        <--- Summoning
11 Metamorphosis  <-- change unit's race
33 FX_ONDINS <-- change race

1  FX_FAR_EYE observe far location
2  FX_MIND_READING
3  FX_WIZARD_WALKING
4  FX_BREED_CATTLE FX_GRAIN_PLANT  <-- add resource to location
5  FX_RAISE_TO_HERO   <-- change race
6  FX_RANDOM_MOUNT    <- random object of specific equipment type
7  FX_MINERAL_SCRY
8  FX_SUMMONING        <--- Summoning
9  FX_CORPSE_RAISING
10 FX_FAIR_WEATHER   <- change weather
11 FX_METAMORPHOSIS  <-- change race
12 FX_MOUNT_CLONING
13 FX_BEAST_CALL
14 FX_LIFT_COINS
15 FX_PICK_POCKETS
16 FX_WATERY_VISION observe far location (water only)
17 FX_ALTERED_UNIT
18 FX_WILD_GROWTH
19 FX_SACRIFICE
20 FX_MEETING_MIND
21 FX_FORTRESS <-- create structure
22 fx_change_weather  <- change weather
23 FX_CALL_SEA <- transfer resources from sea to the current location
24 FX_BEAST_GATHERING <- one each of horse or cattles will be substracted from all adjacent areas, and added to the local area.
25 FX_CHASM_OPENS
26 FX_ASSASSINATION
27 FX_MOSS_POLLUTION
28 fx_capture_attempt
29 FX_DEVASTATION
30 fx_open_portal
31 FX_LURE_OTHER <-- attract unit from neighbouring location
32 FX_OPEN_THE_WAY
33 FX_ONDINS



